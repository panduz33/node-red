[{"id":"6e92c3b40397190f","type":"tab","label":"Test Case Generator - API","disabled":false,"info":"","env":[]},{"id":"0c22f530c3c0664b","type":"group","z":"6e92c3b40397190f","name":"Send API Form","style":{"label":true},"nodes":["53dc8eeefed1efef","fd7586c1ac55827a","b5778f09b28863ad","6b2b32b7f621afa6","613dcc49662ca5f4","b9e9674994ce537a","dcd834e8d096929f","5ed24110df3fdd7a","75ed7487ca8f28db"],"x":14,"y":99,"w":452,"h":262},{"id":"90dc15739c5b37c4","type":"group","z":"6e92c3b40397190f","name":"Send API Request","style":{"label":true},"nodes":["efd251b9127235cb","98ec5ec61c6d0023","90fbc07731b0e79c","2047f8ef6fde2349","9d0ef9f88ca139e4","e4fe354c81e96010","c521da532b45c8dc","127556be06c5dc25","91e9a8620666100f","60b8f418c8433150","068d2838d2b5d80a"],"x":14,"y":379,"w":1052,"h":262},{"id":"e27d87363436572a","type":"group","z":"6e92c3b40397190f","name":"Loading Component","style":{"label":true},"nodes":["af80a6540d807a2a","9fb9ca5c07bdc087","802ed2c594b2c05b","c527d7f19c3f4d2b","93055d5c63f760d6","3366623a7b866780"],"x":854,"y":99,"w":692,"h":182},{"id":"a11fcadd25f5f3ae","type":"group","z":"6e92c3b40397190f","name":"Clear Component","style":{"label":true},"nodes":["795140f57cbe7ee8","7a2a819fd73e5ff0","017c8ee5d802a9de","3735eacce193b473"],"x":474,"y":99,"w":372,"h":162},{"id":"403a5c6b1d174668","type":"group","z":"6e92c3b40397190f","name":"Generate Test Cases Function","style":{"label":true},"nodes":["9e91a9c5b7343e6b","87ad3cd8c4fbd8fe","ceb1fefde9199487","1993e996171cc19d","637e347cfcc1ecf1","31aca207282142be","bfc907663f335747","377883c46a767ff8","577b53440c8f06df","bec55eff4e1b9dc8","ba4e36cb3880adda","1c1e2430e0aff1b0","d6a58bbea39ba866","9fbeb216f9ae1ef2","f17eefe493e31532","bc4cc37203fbc604","3e524d4ab7fcac4c","e51b22c23fac4cf0","5531815c8f5f98ef"],"x":14,"y":859,"w":1392,"h":462},{"id":"4f013001b730be31","type":"group","z":"6e92c3b40397190f","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["f24c821060657b9a","b5b5c367deea3499","3cead1b0c1f894a9","1c01288cb95cb225","0fcbd0c3e6bd89a6","eac93d4250ae22fa","154f398c4d400142","1d671732fdba6558","0b4fa492edbd5f8f","721527b9f4aa359e","ba04a047ca752f6f","85526c554fa3e47d"],"x":14,"y":1379,"w":832,"h":322},{"id":"79d1c81eec16a606","type":"ui-base","name":"Dashboard","path":"/dashboard","appIcon":"home","includeClientData":true,"acceptsClientConfig":["ui-notification","ui-control"],"showPathInSidebar":false,"headerContent":"page","navigationStyle":"default","titleBarStyle":"default","showReconnectNotification":true,"notificationDisplayTime":1,"showDisconnectNotification":true,"allowInstall":false},{"id":"2e01dbb45e72dd6e","type":"ui-theme","name":"Default Theme","colors":{"surface":"#ffffff","primary":"#0094CE","bgPage":"#eeeeee","groupBg":"#ffffff","groupOutline":"#cccccc"},"sizes":{"density":"default","pagePadding":"12px","groupGap":"12px","groupBorderRadius":"4px","widgetGap":"12px"}},{"id":"53dbace1b01bdf4a","type":"ui-page","name":"AI HELPER","ui":"79d1c81eec16a606","path":"/tcg-api","icon":"home","layout":"grid","theme":"2e01dbb45e72dd6e","breakpoints":[{"name":"Default","px":"0","cols":"3"},{"name":"Tablet","px":"576","cols":"6"},{"name":"Small Desktop","px":"768","cols":"9"},{"name":"Desktop","px":"1024","cols":"12"}],"order":1,"className":"","visible":"true","disabled":"false"},{"id":"ca9d936cd15f056f","type":"ui-group","name":"Header","page":"53dbace1b01bdf4a","width":"18","height":1,"order":1,"showTitle":false,"className":"","visible":"true","disabled":"false","groupType":"default"},{"id":"a79ca74580890f5b","type":"ui-group","name":"Request","page":"53dbace1b01bdf4a","width":"12","height":1,"order":2,"showTitle":false,"className":"","visible":"true","disabled":"false","groupType":"default"},{"id":"e4d23c64c3b67038","type":"ui-group","name":"Response","page":"53dbace1b01bdf4a","width":"18","height":"1","order":3,"showTitle":false,"className":"","visible":"true","disabled":"false","groupType":"default"},{"id":"9d67e1df6e3a3bb5","type":"ui-group","name":"AI Request","page":"53dbace1b01bdf4a","width":"18","height":1,"order":4,"showTitle":false,"className":"","visible":"true","disabled":"false","groupType":"default"},{"id":"16b6ee702e6ee8ed","type":"ui-text","z":"6e92c3b40397190f","group":"ca9d936cd15f056f","order":1,"width":"16","height":"1","name":"Title","label":"","format":"{{msg.payload}}","layout":"row-left","style":true,"font":"Arial,Arial,Helvetica,sans-serif","fontSize":"24","color":"#717171","wrapText":false,"className":"","x":270,"y":40,"wires":[]},{"id":"17edfd847cfd5630","type":"inject","z":"6e92c3b40397190f","name":"Inject Payload","props":[{"p":"payload"}],"repeat":"","crontab":"","once":true,"onceDelay":0.1,"topic":"","payload":"Test Case Generator - API","payloadType":"str","x":120,"y":40,"wires":[["16b6ee702e6ee8ed"]]},{"id":"53dc8eeefed1efef","type":"ui-text-input","z":"6e92c3b40397190f","g":"0c22f530c3c0664b","group":"a79ca74580890f5b","name":"URL","label":"URL","order":2,"width":"7","height":"1","topic":"topic","topicType":"msg","mode":"text","tooltip":"","delay":300,"passthru":false,"sendOnDelay":false,"sendOnBlur":true,"sendOnEnter":true,"className":"","clearable":false,"sendOnClear":false,"icon":"","iconPosition":"left","iconInnerPosition":"inside","x":90,"y":140,"wires":[["b5778f09b28863ad"]]},{"id":"fd7586c1ac55827a","type":"ui-dropdown","z":"6e92c3b40397190f","g":"0c22f530c3c0664b","group":"a79ca74580890f5b","name":"METHOD","label":"Select Method:","tooltip":"","order":1,"width":"3","height":"1","passthru":false,"multiple":false,"chips":false,"clearable":false,"options":[{"label":"GET","value":"get","type":"str"},{"label":"POST","value":"post","type":"str"}],"payload":"","topic":"topic","topicType":"msg","className":"","typeIsComboBox":false,"msgTrigger":"onChange","x":100,"y":180,"wires":[["6b2b32b7f621afa6"]]},{"id":"efd251b9127235cb","type":"http request","z":"6e92c3b40397190f","g":"90dc15739c5b37c4","name":"API REQUEST","method":"use","ret":"txt","paytoqs":"ignore","url":"","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[],"x":460,"y":500,"wires":[["9d0ef9f88ca139e4"]]},{"id":"98ec5ec61c6d0023","type":"ui-button","z":"6e92c3b40397190f","g":"90dc15739c5b37c4","group":"a79ca74580890f5b","name":"Send","label":"Send","order":3,"width":"2","height":"1","emulateClick":false,"tooltip":"","color":"","bgcolor":"","className":"","icon":"","iconPosition":"left","payload":"","payloadType":"str","topic":"topic","topicType":"msg","buttonColor":"","textColor":"","iconColor":"","enableClick":true,"enablePointerdown":false,"pointerdownPayload":"","pointerdownPayloadType":"str","enablePointerup":false,"pointerupPayload":"","pointerupPayloadType":"str","x":90,"y":480,"wires":[["90fbc07731b0e79c"]]},{"id":"90fbc07731b0e79c","type":"function","z":"6e92c3b40397190f","g":"90dc15739c5b37c4","name":"Construct Request","func":"const method = flow.get(\"method\");\nconst url = flow.get(\"url\");\nconst headers = flow.get(\"headers\");\nconst body = flow.get(\"body\");\n\nif(method === undefined || \"\"){\n    return [{\n        payload : \"please select method first!\"\n    }, null]\n}\n\nif(url === undefined || \"\"){\n    return [{\n        payload : \"please input url first!\"\n    }, null]\n}\n\nif(body === undefined || body === \"\"){\n    return [null, {\n        method,\n        url,\n        headers\n    }]\n}\n\nreturn [null, {\n    method,\n    url,\n    headers,\n    payload : JSON.parse(body)\n}]","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":270,"y":480,"wires":[["2047f8ef6fde2349"],["efd251b9127235cb"]]},{"id":"b5778f09b28863ad","type":"function","z":"6e92c3b40397190f","g":"0c22f530c3c0664b","name":"save url","func":"flow.set(\"url\", msg.payload);","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":360,"y":140,"wires":[[]]},{"id":"6b2b32b7f621afa6","type":"function","z":"6e92c3b40397190f","g":"0c22f530c3c0664b","name":"save method","func":"flow.set(\"method\", msg.payload);","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":370,"y":180,"wires":[[]]},{"id":"2047f8ef6fde2349","type":"ui-notification","z":"6e92c3b40397190f","g":"90dc15739c5b37c4","ui":"79d1c81eec16a606","position":"top right","colorDefault":true,"color":"#000000","displayTime":"3","showCountdown":true,"outputs":1,"allowDismiss":true,"dismissText":"Close","allowConfirm":false,"confirmText":"Confirm","raw":false,"className":"","name":"Warning","x":440,"y":440,"wires":[[]]},{"id":"9d0ef9f88ca139e4","type":"function","z":"6e92c3b40397190f","g":"90dc15739c5b37c4","name":"Check Response","func":"const response = msg.payload;\n\nif(typeof response === 'string'){\n    return [{\n        payload : response\n    }, null]\n}\n\nreturn [null, {\n    payload : response\n}];","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":650,"y":500,"wires":[["e4fe354c81e96010"],["c521da532b45c8dc"]]},{"id":"e4fe354c81e96010","type":"json","z":"6e92c3b40397190f","g":"90dc15739c5b37c4","name":"","property":"payload","action":"","pretty":false,"x":810,"y":420,"wires":[["c521da532b45c8dc"]]},{"id":"c521da532b45c8dc","type":"function","z":"6e92c3b40397190f","g":"90dc15739c5b37c4","name":"Save Response","func":"flow.set(\"response\", msg.payload);","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":960,"y":500,"wires":[[]]},{"id":"127556be06c5dc25","type":"complete","z":"6e92c3b40397190f","g":"90dc15739c5b37c4","name":"","scope":["c521da532b45c8dc"],"uncaught":false,"x":110,"y":600,"wires":[["91e9a8620666100f"]]},{"id":"91e9a8620666100f","type":"function","z":"6e92c3b40397190f","g":"90dc15739c5b37c4","name":"Send Response","func":"const response = flow.get(\"response\");\n\nreturn {\n    payload : JSON.stringify(response, null, 3)\n}","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":300,"y":600,"wires":[["60b8f418c8433150"]]},{"id":"60b8f418c8433150","type":"ui-template","z":"6e92c3b40397190f","g":"90dc15739c5b37c4","group":"e4d23c64c3b67038","page":"","ui":"","name":"Response","order":1,"width":"12","height":"1","head":"","format":"<template>\n  <div>\n    <h2>Response Body Viewer</h2>\n    <pre class=\"json-output\">{{ prettyJson }}</pre>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    msg: Object, // incoming message from Node-RED\n  },\n  data() {\n    return {\n      prettyJson: '',\n    };\n  },\n  watch: {\n    msg: {\n      immediate: true,\n      deep: true,\n      handler(newVal) {\n        if (newVal && typeof newVal.payload !== 'undefined') {\n          try {\n            const json = typeof newVal.payload === 'string'\n              ? JSON.parse(newVal.payload)\n              : newVal.payload;\n\n            this.prettyJson = JSON.stringify(json, null, 2);\n          } catch (e) {\n            this.prettyJson = 'Invalid JSON:\\n' + newVal.payload;\n          }\n        }\n      }\n    }\n  },\n}\n</script>\n\n<style scoped>\n.json-output {\n  background: black;\n  color: white;\n  padding: 1em;\n  border-radius: 8px;\n  white-space: pre-wrap;\n  font-family: 'Courier New', Courier, monospace;\n  overflow: auto;\n  max-height: 400px;\n}\n</style>\n","storeOutMessages":true,"passthru":true,"resendOnRefresh":true,"templateScope":"local","className":"","x":540,"y":600,"wires":[[]]},{"id":"9e91a9c5b7343e6b","type":"ui-button","z":"6e92c3b40397190f","g":"403a5c6b1d174668","group":"9d67e1df6e3a3bb5","name":"Generate TC Prompt","label":"Generate TC Prompt","order":3,"width":"3","height":"1","emulateClick":false,"tooltip":"","color":"","bgcolor":"","className":"","icon":"","iconPosition":"left","payload":"","payloadType":"str","topic":"topic","topicType":"msg","buttonColor":"","textColor":"","iconColor":"","enableClick":true,"enablePointerdown":false,"pointerdownPayload":"","pointerdownPayloadType":"str","enablePointerup":false,"pointerupPayload":"","pointerupPayloadType":"str","x":140,"y":920,"wires":[["377883c46a767ff8"]]},{"id":"87ad3cd8c4fbd8fe","type":"http request","z":"6e92c3b40397190f","g":"403a5c6b1d174668","name":"AI REQUEST","method":"use","ret":"txt","paytoqs":"ignore","url":"","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[],"x":870,"y":1000,"wires":[["1993e996171cc19d"]]},{"id":"ceb1fefde9199487","type":"debug","z":"6e92c3b40397190f","g":"403a5c6b1d174668","name":"DEBUG - AI RESPONSE","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":1250,"y":960,"wires":[]},{"id":"1993e996171cc19d","type":"json","z":"6e92c3b40397190f","g":"403a5c6b1d174668","name":"AI Parse","property":"payload","action":"","pretty":false,"x":1040,"y":1000,"wires":[["ceb1fefde9199487","637e347cfcc1ecf1"]]},{"id":"af80a6540d807a2a","type":"ui-template","z":"6e92c3b40397190f","g":"e27d87363436572a","group":"","page":"53dbace1b01bdf4a","ui":"","name":"Loading","order":0,"width":0,"height":0,"head":"","format":"<template>\n  <div>\n    <!-- Fullscreen Loading Overlay -->\n    <div v-if=\"showOverlay\" class=\"overlay\">\n      <div class=\"spinner\"></div>\n      <p class=\"loading-text\">Loading, please wait...</p>\n    </div>\n\n    <!-- Normal content when not loading -->\n    <div v-else>\n      <slot>\n        <p>All done!</p>\n      </slot>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    msg: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  data() {\n    return {\n      showOverlay: false,\n      timeoutId: null\n    }\n  },\n  watch: {\n    msg: {\n      immediate: true,\n      deep: true,\n      handler(newVal) {\n        if (newVal?.loading) {\n          this.showOverlay = true\n          clearTimeout(this.timeoutId)\n\n          const timeoutMs = newVal.timeout ?? 0\n          if (timeoutMs > 0) {\n            this.timeoutId = setTimeout(() => {\n              this.showOverlay = false\n              this.send('Request Time Out!')\n            }, timeoutMs)\n          }\n        } else {\n          this.showOverlay = false\n          clearTimeout(this.timeoutId)\n        }\n      }\n    }\n  },\n  unmounted() {\n    clearTimeout(this.timeoutId)\n  }\n}\n</script>\n\n<style scoped>\n.overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(255, 255, 255, 0.95);\n  z-index: 9999;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n\n.spinner {\n  border: 8px solid #ccc;\n  border-top: 8px solid #007bff;\n  border-radius: 50%;\n  width: 60px;\n  height: 60px;\n  animation: spin 1s linear infinite;\n}\n\n.loading-text {\n  margin-top: 1rem;\n  font-size: 1.2rem;\n  color: #333;\n}\n\n@keyframes spin {\n  0% {\n    transform: rotate(0deg);\n  }\n\n  100% {\n    transform: rotate(360deg);\n  }\n}\n</style>\n","storeOutMessages":true,"passthru":true,"resendOnRefresh":true,"templateScope":"widget:page","className":"","x":1300,"y":180,"wires":[["3366623a7b866780"]]},{"id":"613dcc49662ca5f4","type":"ui-text-input","z":"6e92c3b40397190f","g":"0c22f530c3c0664b","group":"a79ca74580890f5b","name":"Body","label":"Body","order":5,"width":"12","height":"4","topic":"topic","topicType":"msg","mode":"textarea","tooltip":"","delay":300,"passthru":false,"sendOnDelay":false,"sendOnBlur":true,"sendOnEnter":false,"className":"","clearable":false,"sendOnClear":true,"icon":"","iconPosition":"left","iconInnerPosition":"inside","x":90,"y":260,"wires":[["b9e9674994ce537a"]]},{"id":"b9e9674994ce537a","type":"function","z":"6e92c3b40397190f","g":"0c22f530c3c0664b","name":"save body","func":"flow.set(\"body\", msg.payload);","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":370,"y":260,"wires":[[]]},{"id":"9fb9ca5c07bdc087","type":"complete","z":"6e92c3b40397190f","g":"e27d87363436572a","name":"Start Loading","scope":["90fbc07731b0e79c","377883c46a767ff8"],"uncaught":false,"x":950,"y":140,"wires":[["802ed2c594b2c05b"]]},{"id":"802ed2c594b2c05b","type":"function","z":"6e92c3b40397190f","g":"e27d87363436572a","name":"Start","func":"return {\n    loading : true,\n    timeout : 20000\n};","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1110,"y":140,"wires":[["af80a6540d807a2a"]]},{"id":"c527d7f19c3f4d2b","type":"complete","z":"6e92c3b40397190f","g":"e27d87363436572a","name":"Stop Loading","scope":["9d0ef9f88ca139e4","1993e996171cc19d","bfc907663f335747","bc4cc37203fbc604"],"uncaught":false,"x":950,"y":240,"wires":[["93055d5c63f760d6"]]},{"id":"93055d5c63f760d6","type":"function","z":"6e92c3b40397190f","g":"e27d87363436572a","name":"Stop","func":"return {\n    loading : false\n};","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1110,"y":240,"wires":[["af80a6540d807a2a"]]},{"id":"795140f57cbe7ee8","type":"ui-button","z":"6e92c3b40397190f","g":"a11fcadd25f5f3ae","group":"ca9d936cd15f056f","name":"Clear","label":"Reset","order":2,"width":"2","height":"1","emulateClick":false,"tooltip":"","color":"","bgcolor":"","className":"","icon":"","iconPosition":"left","payload":"","payloadType":"str","topic":"topic","topicType":"msg","buttonColor":"red","textColor":"white","iconColor":"","enableClick":true,"enablePointerdown":false,"pointerdownPayload":"","pointerdownPayloadType":"str","enablePointerup":false,"pointerupPayload":"","pointerupPayloadType":"str","x":550,"y":180,"wires":[["7a2a819fd73e5ff0","017c8ee5d802a9de"]]},{"id":"7a2a819fd73e5ff0","type":"change","z":"6e92c3b40397190f","g":"a11fcadd25f5f3ae","name":"Delete All Data","rules":[{"t":"delete","p":"body","pt":"flow"},{"t":"delete","p":"response","pt":"flow"},{"t":"delete","p":"url","pt":"flow"}],"action":"","property":"","from":"","to":"","reg":false,"x":700,"y":220,"wires":[[]]},{"id":"017c8ee5d802a9de","type":"function","z":"6e92c3b40397190f","g":"a11fcadd25f5f3ae","name":"Clear Field","func":"\nreturn {\n    payload : \"\"\n};","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":690,"y":140,"wires":[["3735eacce193b473"]]},{"id":"710102c99ae38fc7","type":"ui-template","z":"6e92c3b40397190f","group":"9d67e1df6e3a3bb5","page":"","ui":"","name":"Select Priority","order":1,"width":0,"height":0,"head":"","format":"<template>\n  <div>\n    <label style=\"font-weight: bold; font-size: 1.2em; display: block; margin-bottom: 10px;\">\n      Select one or more priority\n    </label>\n    <div style=\"display: flex; gap: 20px; flex-wrap: wrap;\">\n      <label\n        v-for=\"(priority, index) in priorities\"\n        :key=\"index\"\n        style=\"display: flex; align-items: center;\"\n      >\n        <input\n          type=\"checkbox\"\n          :value=\"priority\"\n          v-model=\"selectedPriorities\"\n          style=\"width: 20px; height: 20px; margin-right: 8px;\"\n        />\n        <span style=\"font-size: 1.1em;\">{{ priority }}</span>\n      </label>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: ['send', 'msg'], // `send` is provided by Node-RED Dashboard 2.0\n  data() {\n    return {\n      priorities: ['P0 - Critical', 'P1 - High', 'P2 - Modereate', 'P3 - Low'],\n      selectedPriorities: [],\n      debounceTimer: null\n    }\n  },\n  watch: {\n    selectedPriorities: {\n      handler(newVal) {\n        clearTimeout(this.debounceTimer)\n        this.debounceTimer = setTimeout(() => {\n          this.send({ payload: newVal })\n        }, 300)\n      },\n      deep: true\n    }\n  }\n}\n</script>\n","storeOutMessages":true,"passthru":true,"resendOnRefresh":true,"templateScope":"local","className":"","x":120,"y":780,"wires":[["2050d633127ebb66"]]},{"id":"2050d633127ebb66","type":"function","z":"6e92c3b40397190f","name":"save priority","func":"flow.set(\"priority\", msg.payload);","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":330,"y":780,"wires":[[]]},{"id":"637e347cfcc1ecf1","type":"function","z":"6e92c3b40397190f","g":"403a5c6b1d174668","name":"Save AI Response #unused","func":"flow.set(\"ai_response\", msg.payload);","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1260,"y":1000,"wires":[[]]},{"id":"31aca207282142be","type":"ui-notification","z":"6e92c3b40397190f","g":"403a5c6b1d174668","ui":"79d1c81eec16a606","position":"center center","colorDefault":true,"color":"#000000","displayTime":"","showCountdown":true,"outputs":1,"allowDismiss":true,"dismissText":"Close","allowConfirm":false,"confirmText":"Confirm","raw":false,"className":"","name":"Warning","x":740,"y":900,"wires":[[]]},{"id":"bfc907663f335747","type":"function","z":"6e92c3b40397190f","g":"403a5c6b1d174668","name":"AI Request Stop","func":"return {\n    payload : msg.payload\n};","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":560,"y":900,"wires":[["31aca207282142be"]]},{"id":"3366623a7b866780","type":"ui-notification","z":"6e92c3b40397190f","g":"e27d87363436572a","ui":"79d1c81eec16a606","position":"center center","colorDefault":true,"color":"#000000","displayTime":"","showCountdown":true,"outputs":1,"allowDismiss":true,"dismissText":"Close","allowConfirm":false,"confirmText":"Confirm","raw":false,"className":"","name":"Warning","x":1460,"y":180,"wires":[[]]},{"id":"377883c46a767ff8","type":"function","z":"6e92c3b40397190f","g":"403a5c6b1d174668","name":"AI Request","func":"const response = JSON.stringify(flow.get(\"response\"));\nconst request = flow.get(\"body\");\nlet priority = flow.get(\"priority\").toString();\nconst totalTestCases = flow.get(\"total_test_cases\") || 5;\nconst method = flow.get(\"method\") || \"GET\";\nconst url = flow.get(\"url\");\nconst headers = flow.get(\"headers\");\n\n// const claudeKey = env.get(\"CLAUDE_KEY\");\n\n//const url = \"https://api.anthropic.com/v1/messages\";\n//const method = \"POST\";\n\n// const headers = {\n//     \"anthropic-version\": \"2023-06-01\",\n//     \"x-api-key\" : claudeKey\n// }\n\nif(response === undefined){\n    return [{\n        payload : \"Please send request first until get the response!\"\n    }, null]\n}\n\nif(priority === undefined || priority.length === 0){\n    priority = \"Any Priority\";\n}\n\n// const max_tokens = 2000;\n\n//masking URL\nconst maskedUrl = url.replace(/^https?:\\/\\/[^/]+/, \"{{base_url}}\");\n\n//check headers\nlet contentHeaders;\nif(headers === undefined || (Array.from(headers).length === 0)){\n    contentHeaders = \"without headers\"\n}else{\n    contentHeaders = headers;\n}\n\n//check request;\nlet contentRequest\nif(request === undefined || request === \"\"){\n    contentRequest = \"without request body\"\n}else{\n    contentRequest = request\n}\n\nconst messages = [{\n    \"role\": \"user\",\n    //\"content\": `Please generate test ideas from request : ${request} and response : ${response} with priority ${priority}, write it using markdown format with numbering list and order it from highest priority`\n    //\"content\": `Please generate test cases from request : ${request} and response : ${response} with priority ${priority}. The format is JSON from an array of object {test_case_number : string, title : string, description : string, steps : array of object {number : step}, expected_result : array of object {number : result}} without any opening words. Ensure the JSON is complete and syntactically valid. THe response never exceed ${max_tokens} tokens`,\n    \"content\": `You are a Test Cases generator. Generate ${totalTestCases} test cases from http request with \n    method \"${method}\" \\n, \n    url : ${maskedUrl} \\n, \n    headers : ${contentHeaders} \\n,\n    request : ${contentRequest} \\n\n    , and response : ${response} \\n, \n    with priority ${priority}. \\n\n     \n    Structure: an array of object {test_case_number : string, title : string, priority : string, description : string, steps : array of object {number : step}, expected_result : array of object {number : result}. \\n\n    Use short values and ensure JSON is complete and valid.`\n}];\n\nreturn [null, {\n    payload : messages[0].content\n}]\n\n// Respond ONLY with valid JSON in compact format, max ${max_tokens} tokens. \\n\n// and do not exceed token limit.\n\n// const payload = {\n//     \"model\": \"claude-3-7-sonnet-20250219\",\n//     \"max_tokens\": max_tokens,\n//     \"messages\": messages\n// }\n\n// return [null,{\n//     url,\n//     method,\n//     headers,\n//     payload\n// }]","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":350,"y":920,"wires":[["bfc907663f335747"],["f17eefe493e31532","bc4cc37203fbc604","3e524d4ab7fcac4c"]]},{"id":"f24c821060657b9a","type":"csv","z":"6e92c3b40397190f","g":"4f013001b730be31","name":"Save as CSV","spec":"rfc","sep":",","hdrin":true,"hdrout":"all","multi":"one","ret":"\\r\\n","temp":"test_case_number,title,description,priority,steps,expected_result","skip":"0","strings":true,"include_empty_strings":"","include_null_values":"","x":550,"y":1460,"wires":[["b5b5c367deea3499"]]},{"id":"b5b5c367deea3499","type":"file","z":"6e92c3b40397190f","g":"4f013001b730be31","name":"","filename":"filename","filenameType":"msg","appendNewline":true,"createDir":false,"overwriteFile":"true","encoding":"none","x":720,"y":1460,"wires":[[]]},{"id":"3cead1b0c1f894a9","type":"ui-button","z":"6e92c3b40397190f","g":"4f013001b730be31","group":"9d67e1df6e3a3bb5","name":"Download CSV","label":"Download CSV","order":10,"width":"2","height":"1","emulateClick":false,"tooltip":"","color":"","bgcolor":"","className":"","icon":"","iconPosition":"left","payload":"","payloadType":"str","topic":"topic","topicType":"msg","buttonColor":"","textColor":"","iconColor":"","enableClick":true,"enablePointerdown":false,"pointerdownPayload":"","pointerdownPayloadType":"str","enablePointerup":false,"pointerupPayload":"","pointerupPayloadType":"str","x":120,"y":1460,"wires":[["154f398c4d400142"]]},{"id":"1c01288cb95cb225","type":"function","z":"6e92c3b40397190f","g":"4f013001b730be31","name":"Get CSV Result","func":"const csvResult = flow.get(\"csvResult\");\n\nfunction arrayToString(arr) {\n  return arr\n    .map(item => {\n      // Trim quotes and commas from the start and end if present\n      return item.replace(/(^\"|\"$)/g, '').replace(/,$/, '');\n    })\n    .join('\\n'); // Join array with new lines\n}\n\n//convert the steps into string with new line\nconst result = csvResult.map(csv => ({\n    ...csv,\n    expectedResult : arrayToString(csv.expectedResult),\n    steps : arrayToString(csv.steps)\n}))\n\nconsole.log(result);\n\nreturn {\n    payload : result,\n    filename : \"testcase.csv\"\n};","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":740,"y":1420,"wires":[[]]},{"id":"dcd834e8d096929f","type":"function","z":"6e92c3b40397190f","g":"0c22f530c3c0664b","name":"save headers","func":"flow.set(\"headers\", msg.payload);","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":370,"y":220,"wires":[[]]},{"id":"5ed24110df3fdd7a","type":"ui-template","z":"6e92c3b40397190f","g":"0c22f530c3c0664b","group":"a79ca74580890f5b","page":"","ui":"","name":"Headers","order":4,"width":0,"height":0,"head":"","format":"<template>\n  <p>Headers</p>\n  <div>\n    <div\n      v-for=\"(item, index) in headers\"\n      :key=\"index\"\n      style=\"display: flex; gap: 8px; margin-bottom: 8px\"\n    >\n      <input\n        v-model=\"item.key\"\n        @blur=\"triggerSend\"\n        placeholder=\"Key\"\n        style=\"flex: 1\"\n      />\n      <input\n        v-model=\"item.value\"\n        @blur=\"triggerSend\"\n        placeholder=\"Value\"\n        style=\"flex: 1\"\n      />\n      <button @click=\"remove(index)\">✕</button>\n    </div>\n    <button @click=\"add\">+ Add</button>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      headers: [],\n      debounceTimer: null\n    };\n  },\n  mounted() {\n    // Load initial payload if provided\n    if (this.msg?.payload && typeof this.msg.payload === 'object') {\n      this.headers = Object.entries(this.msg.payload).map(([key, value]) => ({\n        key,\n        value\n      }));\n    } else {\n      this.headers = [{ key: '', value: '' }];\n    }\n  },\n  methods: {\n    add() {\n      this.headers.push({ key: '', value: '' });\n    },\n    remove(index) {\n      this.headers.splice(index, 1);\n      this.sendNow(); // send immediately when removing\n    },\n    triggerSend() {\n      clearTimeout(this.debounceTimer);\n      this.debounceTimer = setTimeout(this.sendNow, 400);\n    },\n    sendNow() {\n      const result = {};\n      for (const { key, value } of this.headers) {\n        if (key.trim() !== '') result[key.trim()] = value;\n      }\n      this.send({ payload: result });\n    }\n  }\n};\n</script>\n\n<style scoped>\ninput {\n  padding: 5px;\n  border: 1px solid #ccc;\n  border-radius: 3px;\n}\nbutton {\n  cursor: pointer;\n  padding: 4px 10px;\n}\n</style>\n","storeOutMessages":true,"passthru":true,"resendOnRefresh":true,"templateScope":"local","className":"","x":100,"y":220,"wires":[["dcd834e8d096929f"]]},{"id":"e3e1742c8116f664","type":"catch","z":"6e92c3b40397190f","name":"","scope":null,"uncaught":false,"x":460,"y":40,"wires":[["a3a98d2ee8db97f2"]]},{"id":"a3a98d2ee8db97f2","type":"debug","z":"6e92c3b40397190f","name":"debug 1","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":620,"y":40,"wires":[]},{"id":"75ed7487ca8f28db","type":"link in","z":"6e92c3b40397190f","g":"0c22f530c3c0664b","name":"IN - Clear Data","links":["3735eacce193b473"],"x":225,"y":320,"wires":[["b9e9674994ce537a"]]},{"id":"3735eacce193b473","type":"link out","z":"6e92c3b40397190f","g":"a11fcadd25f5f3ae","name":"OUT - Clear Data","mode":"link","links":["75ed7487ca8f28db","9b84703483290171","9fbeb216f9ae1ef2","ba04a047ca752f6f","85526c554fa3e47d"],"x":805,"y":140,"wires":[]},{"id":"068d2838d2b5d80a","type":"comment","z":"6e92c3b40397190f","g":"90dc15739c5b37c4","name":"Display Response","info":"","x":130,"y":560,"wires":[]},{"id":"bec55eff4e1b9dc8","type":"complete","z":"6e92c3b40397190f","g":"403a5c6b1d174668","name":"","scope":["637e347cfcc1ecf1"],"uncaught":false,"x":110,"y":1280,"wires":[["ba4e36cb3880adda"]]},{"id":"ba4e36cb3880adda","type":"function","z":"6e92c3b40397190f","g":"403a5c6b1d174668","name":"Send AI Response","func":"const ai_response = flow.get(\"ai_response\");\nreturn {\n     payload : ai_response.content[0].text\n};","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":310,"y":1280,"wires":[["1c1e2430e0aff1b0"]]},{"id":"1c1e2430e0aff1b0","type":"ui-template","z":"6e92c3b40397190f","d":true,"g":"403a5c6b1d174668","group":"9d67e1df6e3a3bb5","page":"","ui":"","name":"AI Response","order":7,"width":0,"height":0,"head":"","format":"<template>\n  <div>\n    <h2>Test Case Parser</h2>\n\n    <div v-if=\"error\" style=\"color: red;\">{{ error }}</div>\n\n    <div v-if=\"testCases.length\">\n      <div v-for=\"(test, index) in testCases\" :key=\"index\" class=\"test-case\">\n        <h3>{{ test.test_case_number }}: {{ test.title }}</h3>\n        <p><strong>Description:</strong> {{ test.description }}</p>\n        <p><strong>Priority:</strong> {{ test.priority }}</p>\n        <p><strong>Steps:</strong></p>\n        <ul>\n          <li v-for=\"(stepObj, sIndex) in test.steps\" :key=\"sIndex\">\n            {{ Object.keys(stepObj)[0] }}. {{ Object.values(stepObj)[0] }}\n          </li>\n        </ul>\n        <p><strong>Expected Result:</strong></p>\n        <ul>\n          <li v-for=\"(resultObj, rIndex) in test.expected_result\" :key=\"rIndex\">\n            {{ Object.keys(resultObj)[0] }}. {{ Object.values(resultObj)[0] }}\n          </li>\n        </ul>\n        <hr />\n      </div>\n    </div>\n\n    <div v-else>\n      <p>No valid test cases found.</p>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      testCases: [],\n      error: '',\n      msg: null, // You must define this!\n    };\n  },\n  watch: {\n    msg: {\n      immediate: true,\n      handler(newVal) {\n        if (newVal && newVal.payload) {\n          this.sanitizeAndParse(newVal.payload);\n        }\n      },\n    },\n  },\n  mounted() {\n    // ✅ Test payload\n    this.msg = {\n      payload: `\n        [\n          {\n            \"test_case_number\": \"TC-001\",\n            \"title\": \"Login Test\",\n            \"description\": \"Verify login\",\n            \"priority\": \"High\",\n            \"steps\": [{\"1\":\"Enter valid username\"},{\"2\":\"Enter valid password\"},{\"3\":\"Click Submit\"}],\n            \"expected_result\": [{\"1\":\"Dashboard appears\"}]\n          }\n        ]\n      `,\n    };\n  },\n  methods: {\n    send(payload) {\n      // Optional: mimic Node-RED output\n      console.log(\"Sending parsed data:\", payload);\n    },\n    sanitizeAndParse(raw) {\n      try {\n        let str = typeof raw === \"string\" ? raw : JSON.stringify(raw);\n        str = str.replace(/```json/g, \"\").replace(/```/g, \"\").trim();\n\n        // Repair bracket issues\n        const openBrackets = (str.match(/\\[/g) || []).length;\n        const closeBrackets = (str.match(/]/g) || []).length;\n        const openBraces = (str.match(/{/g) || []).length;\n        const closeBraces = (str.match(/}/g) || []).length;\n\n        if (openBrackets > closeBrackets) {\n          str += \"]\".repeat(openBrackets - closeBrackets);\n        }\n        if (openBraces > closeBraces) {\n          str += \"}\".repeat(openBraces - closeBraces);\n        }\n\n        const parsed = JSON.parse(str);\n        this.testCases = Array.isArray(parsed) ? parsed : [parsed];\n        this.error = \"\";\n        this.send({ payload: this.testCases });\n      } catch (e) {\n        this.testCases = [];\n        this.error = \"⚠️ JSON parse error: \" + e.message;\n      }\n    },\n  },\n};\n</script>\n\n<style>\n.test-case {\n  margin-bottom: 1rem;\n  padding: 0.5rem;\n  background: #f0f0f0;\n  border-radius: 6px;\n}\n</style>\n","storeOutMessages":true,"passthru":true,"resendOnRefresh":true,"templateScope":"local","className":"","x":550,"y":1280,"wires":[["577b53440c8f06df"]]},{"id":"577b53440c8f06df","type":"function","z":"6e92c3b40397190f","g":"403a5c6b1d174668","name":"Save Test Cases Result","func":"flow.set(\"csvResult\", msg.payload);\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":750,"y":1280,"wires":[[]]},{"id":"d6a58bbea39ba866","type":"comment","z":"6e92c3b40397190f","g":"403a5c6b1d174668","name":"Display Response","info":"","x":130,"y":1240,"wires":[]},{"id":"9b84703483290171","type":"link in","z":"6e92c3b40397190f","name":"IN - Clear Data","links":["3735eacce193b473"],"x":429.2857360839844,"y":552.857177734375,"wires":[["60b8f418c8433150"]]},{"id":"9fbeb216f9ae1ef2","type":"link in","z":"6e92c3b40397190f","g":"403a5c6b1d174668","name":"IN - Clear Data","links":["3735eacce193b473"],"x":415,"y":1040,"wires":[["1c1e2430e0aff1b0","3e524d4ab7fcac4c"]]},{"id":"f17eefe493e31532","type":"ui-text","z":"6e92c3b40397190f","d":true,"g":"403a5c6b1d174668","group":"9d67e1df6e3a3bb5","order":6,"width":"18","height":"5","name":"Prompt Display","label":"Prompt Execution","format":"{{msg.payload}}","layout":"col-center","style":false,"font":"","fontSize":16,"color":"#717171","wrapText":true,"className":"","x":560,"y":980,"wires":[]},{"id":"bc4cc37203fbc604","type":"function","z":"6e92c3b40397190f","g":"403a5c6b1d174668","name":"AI Request Stop Display","func":"return null;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":590,"y":1020,"wires":[[]]},{"id":"eab4e874ba4aef38","type":"ui-text-input","z":"6e92c3b40397190f","group":"9d67e1df6e3a3bb5","name":"Total Test Cases","label":"Total Test Cases: ","order":2,"width":"3","height":"1","topic":"topic","topicType":"msg","mode":"number","tooltip":"","delay":300,"passthru":true,"sendOnDelay":false,"sendOnBlur":true,"sendOnEnter":true,"className":"","clearable":true,"sendOnClear":false,"icon":"","iconPosition":"left","iconInnerPosition":"inside","x":120,"y":740,"wires":[["718477185f750723"]]},{"id":"718477185f750723","type":"function","z":"6e92c3b40397190f","name":"save total test cases","func":"flow.set(\"total_test_cases\", msg.payload);","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":360,"y":740,"wires":[[]]},{"id":"3e524d4ab7fcac4c","type":"ui-template","z":"6e92c3b40397190f","g":"403a5c6b1d174668","group":"9d67e1df6e3a3bb5","page":"","ui":"","name":"AI Prompt Display","order":5,"width":0,"height":0,"head":"","format":"<template>\n    <div class=\"widget-container\">\n        <h2>Test Case Prompt</h2>\n        <h3>Please copy the content below and send it to any AI Generator, for example Chat GPT, Claude, or Deepseek</h3>\n        <h4>Make sure to check again the content, DON'T send any sensitive information like credentials, real URL, or any PII Data</h4>\n        <button class=\"copy-btn\" @click=\"copyToClipboard\">Copy</button>\n        <pre class=\"formatted-text\" v-if=\"text\">{{ text }}</pre>\n        <i v-else>No data yet.</i>\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            text: ''\n        }\n    },\n    watch: {\n        msg: {\n            immediate: true,\n            handler(newVal) {\n                if (newVal?.payload) {\n                    this.text = newVal.payload\n                }\n            }\n        }\n    },\n    methods: {\n        // Method to copy the text to clipboard\n        copyToClipboard() {\n            const el = document.createElement('textarea')\n            el.value = this.text\n            document.body.appendChild(el)\n            el.select()\n            document.execCommand('copy')\n            document.body.removeChild(el)\n\n            // Optionally alert user that text was copied\n            this.$emit('status', { payload: 'Text copied to clipboard!' })\n        }\n    },\n    mounted() {\n        // Optional setup\n    },\n    unmounted() {\n        // Cleanup if needed\n    }\n}\n</script>\n\n<style>\n.widget-container {\n    position: relative;\n    padding: 12px;\n    background-color: #f5f5f5;\n    border-radius: 8px;\n    border: 1px solid #ddd;\n}\n\n.copy-btn {\n    position: absolute;\n    top: 12px;\n    right: 12px;\n    padding: 6px 12px;\n    background-color: #007bff;\n    color: white;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n    font-size: 12px;\n}\n\n.copy-btn:hover {\n    background-color: #0056b3;\n}\n\n.formatted-text {\n    white-space: pre-wrap;\n    font-family: monospace;\n    background: #fff;\n    padding: 10px;\n    border-radius: 6px;\n    border: 1px solid #ccc;\n    color: #333;\n    font-size: 14px;\n}\n\nh4 {\n    color : red;\n}\n</style>\n","storeOutMessages":true,"passthru":true,"resendOnRefresh":true,"templateScope":"local","className":"","x":570,"y":940,"wires":[[]]},{"id":"0fcbd0c3e6bd89a6","type":"ui-text-input","z":"6e92c3b40397190f","g":"4f013001b730be31","group":"9d67e1df6e3a3bb5","name":"Input AI Response","label":"Input AI Reponse","order":8,"width":"18","height":"4","topic":"topic","topicType":"msg","mode":"textarea","tooltip":"Copy Paste AI Reponse here","delay":300,"passthru":false,"sendOnDelay":false,"sendOnBlur":true,"sendOnEnter":true,"className":"","clearable":false,"sendOnClear":false,"icon":"","iconPosition":"left","iconInnerPosition":"inside","x":130,"y":1520,"wires":[["eac93d4250ae22fa"]]},{"id":"eac93d4250ae22fa","type":"function","z":"6e92c3b40397190f","g":"4f013001b730be31","name":"Save AI Response","func":"flow.set(\"ai_response\", JSON.parse(msg.payload));","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":330,"y":1520,"wires":[[]]},{"id":"154f398c4d400142","type":"function","z":"6e92c3b40397190f","g":"4f013001b730be31","name":"Get AI Response","func":"const aiResponse = flow.get(\"ai_response\");\n\n//construct better view for CSV\n\nconst result = aiResponse.map(text => ({\n    ...text,\n    steps : text.steps.map((s,index) => `${index+1}. ${Object.values(s)}`).join('\\n'),\n    expected_result : text.expected_result.map((res,index) => `${index+1}. ${Object.values(res)}`).join('\\n'),\n}))\n\nreturn {\n    payload : result,\n    filename : \"testcase.csv\"\n};","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":370,"y":1460,"wires":[["f24c821060657b9a"]]},{"id":"1d671732fdba6558","type":"complete","z":"6e92c3b40397190f","g":"4f013001b730be31","name":"","scope":["eac93d4250ae22fa"],"uncaught":false,"x":330,"y":1580,"wires":[["0b4fa492edbd5f8f"]]},{"id":"0b4fa492edbd5f8f","type":"function","z":"6e92c3b40397190f","g":"4f013001b730be31","name":"GET AI Response","func":"const aiResponse = flow.get(\"ai_response\");\n\nconst result = aiResponse.map(text => ({\n    ...text,\n    steps : text.steps.map((s,index) => `${index+1}. ${Object.values(s)}`).join('\\n'),\n    expected_result : text.expected_result.map((res,index) => `${index+1}. ${Object.values(res)}`).join('\\n'),\n}))\n\n\nreturn {\n    payload : result\n};","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":510,"y":1580,"wires":[["721527b9f4aa359e"]]},{"id":"721527b9f4aa359e","type":"ui-table","z":"6e92c3b40397190f","g":"4f013001b730be31","group":"9d67e1df6e3a3bb5","name":"Display CSV","label":"","order":9,"width":"0","height":"0","maxrows":"5","passthru":false,"autocols":false,"showSearch":true,"deselect":true,"selectionType":"none","columns":[{"title":"TC","key":"test_case_number","keyType":"key","type":"text","width":"","align":"start"},{"title":"Title","key":"title","keyType":"key","type":"text","width":"","align":"start"},{"title":"Priority","key":"priority","keyType":"key","type":"text","width":"","align":"start"},{"title":"Description","key":"description","keyType":"key","type":"text","width":"","align":"start"},{"title":"Steps","key":"steps","keyType":"key","type":"text","width":"","align":"start"},{"title":"Expected Result","key":"expected_result","keyType":"key","type":"text","width":"","align":"start"}],"mobileBreakpoint":"sm","mobileBreakpointType":"defaults","action":"replace","x":690,"y":1580,"wires":[[]]},{"id":"ba04a047ca752f6f","type":"link in","z":"6e92c3b40397190f","g":"4f013001b730be31","name":"IN - Clear Data","links":["3735eacce193b473"],"x":55,"y":1600,"wires":[["0fcbd0c3e6bd89a6"]]},{"id":"85526c554fa3e47d","type":"link in","z":"6e92c3b40397190f","g":"4f013001b730be31","name":"IN - Clear Data","links":["3735eacce193b473"],"x":585,"y":1660,"wires":[["721527b9f4aa359e"]]},{"id":"e51b22c23fac4cf0","type":"ui-button","z":"6e92c3b40397190f","d":true,"g":"403a5c6b1d174668","group":"9d67e1df6e3a3bb5","name":"Generate Postman Prompt","label":"Generate Postman Promot","order":4,"width":"3","height":"1","emulateClick":false,"tooltip":"","color":"","bgcolor":"","className":"","icon":"","iconPosition":"left","payload":"","payloadType":"str","topic":"topic","topicType":"msg","buttonColor":"","textColor":"","iconColor":"","enableClick":true,"enablePointerdown":false,"pointerdownPayload":"","pointerdownPayloadType":"str","enablePointerup":false,"pointerupPayload":"","pointerupPayloadType":"str","x":160,"y":1140,"wires":[["5531815c8f5f98ef"]]},{"id":"5531815c8f5f98ef","type":"function","z":"6e92c3b40397190f","g":"403a5c6b1d174668","name":"AI Request","func":"const response = JSON.stringify(flow.get(\"response\"));\nconst request = flow.get(\"body\");\nlet priority = flow.get(\"priority\").toString();\nconst totalTestCases = flow.get(\"total_test_cases\") || 5;\nconst method = flow.get(\"method\") || \"GET\";\nconst url = flow.get(\"url\");\n\n// const claudeKey = env.get(\"CLAUDE_KEY\");\n\n//const url = \"https://api.anthropic.com/v1/messages\";\n//const method = \"POST\";\n\n// const headers = {\n//     \"anthropic-version\": \"2023-06-01\",\n//     \"x-api-key\" : claudeKey\n// }\n\nif(response === undefined){\n    return [{\n        payload : \"Please send request first until get the response!\"\n    }, null]\n}\n\nif(priority === undefined || priority.length === 0){\n    priority = \"Any Priority\";\n}\n\n// const max_tokens = 2000;\n\n//masking URL\nconst maskedUrl = url.replace(/^https?:\\/\\/[^/]+/, \"{{base_url}}\");\n\nconst messages = [{\n    \"role\": \"user\",\n    //\"content\": `Please generate test ideas from request : ${request} and response : ${response} with priority ${priority}, write it using markdown format with numbering list and order it from highest priority`\n    //\"content\": `Please generate test cases from request : ${request} and response : ${response} with priority ${priority}. The format is JSON from an array of object {test_case_number : string, title : string, description : string, steps : array of object {number : step}, expected_result : array of object {number : result}} without any opening words. Ensure the JSON is complete and syntactically valid. THe response never exceed ${max_tokens} tokens`,\n    \"content\": `You are a Postman Test Script generator. Generate postman collections containing ${totalTestCases} files from http request with \n    method \"${method}\" \\n, \n    url : ${maskedUrl} \\n, \n    request : ${request} \\n\n    , and response : ${response} \\n, \n    with priority ${priority}. \\n\n     \n    script for test : \n- response from pm.response.json\n- using pm.test('Test Case Number', () => {\n    pm.expect\n}) \n\n combine test cases into one test script if possible`\n}];\n\nreturn [null, {\n    payload : messages[0].content\n}]\n\n// Respond ONLY with valid JSON in compact format, max ${max_tokens} tokens. \\n\n// and do not exceed token limit.\n\n// const payload = {\n//     \"model\": \"claude-3-7-sonnet-20250219\",\n//     \"max_tokens\": max_tokens,\n//     \"messages\": messages\n// }\n\n// return [null,{\n//     url,\n//     method,\n//     headers,\n//     payload\n// }]","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":370,"y":1140,"wires":[["bfc907663f335747"],["3e524d4ab7fcac4c"]]}]